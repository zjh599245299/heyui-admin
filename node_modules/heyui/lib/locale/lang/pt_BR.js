define(function() { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 558);
/******/ })
/************************************************************************/
/******/ ({

/***/ 558:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(559);


/***/ }),

/***/ 559:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var lang = {
  h: {
    locale: 'pt-BR',
    common: {
      cancel: 'Cancelar',
      confirm: 'Confirmar',
      clear: 'Limpar',
      nullOptionText: 'por favor escolha',
      empty: 'vazio',
      any: 'qualquer'
    },
    confirm: {
      title: 'Confirmar'
    },
    checkbox: {
      limitSize: 'Você pode selecionar até {limitSize}'
    },
    select: {
      nullOptionText: 'por favor escolha',
      placeholder: 'selecionar',
      emptyContent: 'nenhum resultado encontrado',
      searchPlaceHolder: 'pesquisar',
      limitSize: 'Você pode selecionar até {limitSize}.'
    },
    category: {
      placeholder: 'por favor escolha'
    },
    cascader: {
      placeholder: 'por favor escolha'
    },
    categoryModal: {
      limitWords: 'Você pode selecionar até {size} dados.',
      emptyContent: 'Nenhum resultado encontrado',
      total: 'total'
    },
    categoryPicker: {
      nullOptionText: 'por favor escolha',
      placeholder: 'selecionar',
      total: 'total',
      limitSize: 'Você pode selecionar até {0} dados.'
    },
    autoComplate: {
      placeholder: 'Entrada de pesquisa',
      emptyContent: 'Nenhum resultado encontrado'
    },
    validation: {
      base: {
        required: ' não pode ser vazio',
        maxLen: ' o comprimento do texto não pode exceder {value} bits',
        minLen: ' comprimento do texto não pode ser inferior a {value} bits',
        max: ' não maior que {value}',
        min: ' não pode ser menor que {value}'
      },
      type: {
        int: ' não é um formato inteiro correto',
        number: ' não é um formato digital correto',
        email: ' não é um formato de caixa de correio correto',
        url: ' não é um formato de URL correto',
        tel: ' não é um formato de número de telefone correto',
        mobile: ' não é um formato de número de celular correto',
        globalmobile: ' não é um formato de número de celular internacional correto'
      }
    },
    date: {
      today: 'Hoje',
      yesterday: 'Ontem',
      year: 'ano',
      month: 'meses',
      week: 'semana',
      quarter: 'trimestre',
      day: 'dia',
      header: {
        year: '',
        month: '',
        day: ''
      },
      show: {
        week: '{year} {weeknum}th semana {daystart} - {dayend}',
        weekInput: '{year} {week}th semana',
        quarter: '{year} {quarter}th trimestre'
      },
      months: {
        january: 'Jan',
        february: 'Fev',
        march: 'Mar',
        april: 'Abr',
        may: 'Mai',
        june: 'Jun',
        july: 'Jul',
        august: 'Ago',
        september: 'Set',
        october: 'Out',
        november: 'Nov',
        december: 'Dez'
      },
      weeks: {
        monday: 'Seg',
        tuesday: 'Ter',
        wednesday: 'Qua',
        thursday: 'Qui',
        friday: 'Sex',
        saturday: 'Sáb',
        sunday: 'Dom'
      }
    },
    datepicker: {
      placeholder: 'selecionar data',
      startTime: 'Início',
      endTime: 'Fim',
      customize: 'personalizar',
      start: 'Início',
      end: 'Fim'
    },
    wordlimit: {
      warn: 'Você está limitado a entrar {0} palavras'
    },
    wordcount: {
      warn: 'Você excedeu {0} palavras'
    },
    treepicker: {
      selectDesc: 'Você selecionou {0} items',
      placeholder: 'por favor selecione'
    },
    search: {
      placeholder: 'pesquisar...',
      searchText: 'Pesquisar'
    },
    taginput: {
      limitWords: 'Você excedeu o limite de caracteres'
    },
    table: {
      empty: 'Nenhum resultado encontrado'
    },
    uploader: {
      upload: 'Upload',
      reUpload: 'ReUpload'
    },
    pagination: {
      incorrectFormat: 'O formato do valor digitado está incorreto',
      overSize: 'O valor que você inseriu excede o intervalo',
      totalBefore: 'Total',
      totalAfter: 'itens',
      sizeOfPage: '{size} itens/página'
    }
  }
};
var _default = lang;
exports.default = _default;

/***/ })

/******/ })["default"]});;